Given an integer N as input, the program must print two prime numbers whose sum will be equal
to given integer. If there are several combinations possible, print only first such pair. Otherwise
print -1 as output.
Boundary Condition(s):
2 <= N <= 999999
Input Format:
The first line contains the value of N.
Output Format:
The first line contains two prime numbers whose sum is equal to given integer N otherwise -1.
Example Input/Output 1:
Input:
34
Output:
3 31
Example Input/Output 2:
Input:
1024
Output:
3 1021

-----------------------------------------------------------------------------------------------------------------------------------------

import java.util.*;
public class Hello {
    public static boolean isPrime(long n){
        if(n<=1) return false;
        for(int i=2;i<=Math.sqrt(n);i++){
            if(n%i==0){
                return false;
            }
        }
    return true;
    } 
    public static void main(String[] args) {
        Scanner sc=new Scanner(System.in);
        long n=sc.nextLong();
        for(int i=2;i<=n;i++){
            if(isPrime(i) && isPrime(n-i)){
                System.out.print(i+" "+(n-i));
                System.exit(0);
            }
        }
        System.out.print(-1);
	}
}
